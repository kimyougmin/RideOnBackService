spring:
  application:
    name: RideOn
  datasource:
    url: jdbc:postgresql://${DB_URL}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PW}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      dialect: org.hibernate.dialect.PostgreSQLDialect
      hibernate:
        format_sql: true
        show_sql: true
  # PostgreSQL 설정으로 변경했으므로 H2 콘솔 비활성화
  # h2:
  #   console:
  #     enabled: true
  #     path: /h2-console
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
  security:
    oauth2:
      client:
        registration:
          kakao:
            clientId: test
            client-secret: test
            redirect-uri: '{baseUrl}/{action}/oauth2/code/{registrationId}'
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            client-name: Kakao
            scope:
              - profile_nickname
              - profile_image
              - account_email
              - phone_number
              - birthday
              - birthyear
          google:
            client-id: test
            client-secret: test
            redirect-uri: '{baseUrl}/{action}/oauth2/code/{registrationId}'
            scope:
              - profile
              - email
          naver:
            client-id: test
            client-secret: test
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: '{baseUrl}/{action}/oauth2/code/{registrationId}'
            scope:
              - name
              - email
              - profile_image
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
  logging:
    level:
      org.springframework.boot.autoconfigure.security: DEBUG
      com.ll.rideon: DEBUG

# Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: rideon-backend
      environment: development
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99
  web:
    server:
      request:
        log:
          enabled: true

jwt:
  secret: dev-secret-key-for-development-only
  expiration: 36000000  # 10 hour
  token:
    access-expiration: 900000      # 15분 (15 * 60 * 1000 ms)
    refresh-expiration: 604800000  # 7일 (7 * 24 * 60 * 60 * 1000 ms)

naver:
  client-id: test
  client-secret: test

site:
  url:
    frontend: "http://localhost:3000"
